[
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#hello-there",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#hello-there",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Hello there!",
    "text": "Hello there!\n\nBackground: Computer Science Engineer and MBA in Business Analytics.\nCurious to learn.\nUsing R and R Shiny for 6+ years.\nArchitected, built and managed more than 40+ R Shiny applications and dashboards.\nBuilt and led teams of 10+ R developers.\nTrained 30+ colleagues on R from diverse backgrounds.\nHave extensive hands on experience on all flavors of R products - Shiny, R Markdowns, Quarto, and Package development.\nWorking with ProCogia; an Official full service partner with Posit."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#current-challenges",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#current-challenges",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Current Challenges",
    "text": "Current Challenges\nClinical Trails are often complex and time consuming with repeated similar workflow steps for each new variation of the trail.\n\n\n\nThis often leads to\n\nDelayed Analysis and reporting,\nlonger on-boarding time, and\nDelayed Time to Market\n\nresulting in\n\nhindered workflow,\nlower productivity, and\nrepeated boring processes.\n\n\n\n\n\nKey Issues\n\nManual Processes\nLengthy Simulation Times\nScalability Constraints\nLimited Collaboration\nReporting Challenges\nFlexibility and\nReproducibility"
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#solution",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#solution",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Solution",
    "text": "Solution\nEmpowering Bio Statisticians with R Shiny Suite of applications\n\n\nCollaborated with Bio Stats to understand their pain points and challenges.\nDeveloped a basic R Shiny app (MVP) for dosage simulation.\nExpanded it into a full-blown enterprise application, iteratively.\nCreated multiple targeted R Shiny apps for different workflows.\nDeveloped an ecosystem of Bio Statistics R Shiny suite of applications.\nStreamlined processes and optimized workflows.\nAutomated tasks and improved reporting.\nEnhanced workflow efficiency.\nMaximized productivity for the Bio Statistician team."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#how-does-the-journey-look-like-to-make-this-a-success",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#how-does-the-journey-look-like-to-make-this-a-success",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "How does the journey look like to make this a success?",
    "text": "How does the journey look like to make this a success?"
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#migration-process-steps",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#migration-process-steps",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Migration Process Steps",
    "text": "Migration Process Steps\n\nDefine Scope of each process.\nAnalyze repetition rate, importance, and time investment for each work request.\nIdentify the most time-consuming, yet simplest workflow.\nDevelop a MVP (Minimum Viable Product)\n\nShowcase a demo with the smallest workflow.\nThis aids leaders in visualizing the impact of approval.\n\nIntegrate workflows incrementally from small to large."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#engage-with-the-bio-stats-team",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#engage-with-the-bio-stats-team",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Engage with the Bio Stats Team",
    "text": "Engage with the Bio Stats Team\n\nWeekly connects with Bio Stats to ensure that the MVP build is on the right track.\nAdopt Agile methodology for faster iterative improvement and development.\nActively listen to user (Bio Stats) feedback and take “notes”.\n\nPrioritize features based on complexity, time, effort and need.\nPro-actively research and pick up features from the end of the task list in free time to keep developers engaged and happy.\n\nUtilize GitHub Issues to document feature requests or bug fixes.\n\nA picture speaks a thousand words. If it can be explained with a screenshot, don’t shy away.\n\nEnsure commits are linked with respective issues for traceability during testing.\nEstablish clear requirements to expedite implementation, with developer input on the overall app workflow."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#principles-of-application-design",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#principles-of-application-design",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Principles of Application Design",
    "text": "Principles of Application Design\n\nThink about creating and showcasing dashboard outlines in the early discussions.\n\nPrototype the UI layout using draw.io or similar tools.\nUse conditional panels, modules, and well-designed layouts to create a user-friendly interface.\nIterate rapidly to test how different implementations enhance UI/UX.\n\nEstablish a standard application/dashboard template layout such as Shiny Dashboard, bslib and/or bs4Dash.\n\nCreate custom R function wrappers based on organization theme and color layout.\nRe-use the template for new builds and ideas to maintain consistency and coherence."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#principles-of-application-design-1",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#principles-of-application-design-1",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Principles of Application Design",
    "text": "Principles of Application Design\n\nDefine the flow of reactivity for the overall application/dashboard.\n\nOne of my favorites is to use the Waterfall Reactivity Model.\nHelps to avoid Reactivity Spaghetti Mess\nAvoid cluttered and confusing reactivity paths.\nLeverage Shiny’s reactivity to update UI elements dynamically based on user input. This enhances interactivity and responsiveness.\n\nProvide default selections for input widgets, enabling users to explore and understand the application easily.\nPrioritize user-friendliness; if it’s not intuitive, it won’t be used.\nIncorporate “tooltips”, “notifications”, section write-ups and clear instructions to guide users in using the application."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#organize-your-project-structure",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#organize-your-project-structure",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Organize your project structure",
    "text": "Organize your project structure\n\n\n\nMaintain a clear and logical directory structure.\nGroup related files together for easy navigation.\nCreate, Adopt and Enforce a standard development template for easier developer onboarding and faster development.\nHave a project template repository for initial cloning and usage.\nPlease refer to the right image for an illustrative R project directory structure."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#streamline-workflow",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#streamline-workflow",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Streamline Workflow",
    "text": "Streamline Workflow\n\nUse RStudio Projects\n\nIsolates your development environment.\nRelative path referencing for your project files.\nSegregate development flow and context.\n\nVersion Control with Git\n\nTrack changes, collaborate with team members, and manage project history effectively using Git.\nUse Issues, Pull Requests and Connected Commits for efficient and effortless parallel development."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#shiny-development-tips",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#shiny-development-tips",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Shiny Development Tips",
    "text": "Shiny Development Tips\n\nEstablish and adhere to a standard file and code structure.\nImplement coding standards to facilitate seamless collaboration between Bio Statistics teams and R developers.\nEmphasize the use of functions and shiny modules whenever possible.\nOptimize Server logic via Profiling and performance tuning\n\nMinimize unnecessary computations and avoid redundant calculations.\nUse tools like profvis to identify performance bottlenecks and Optimize critical sections of your code for speed.\nUse benchmarking techniques to compare computation speeds of various packages. Refer R function rbenchmark::benchmark().\n\nCreate smaller, independent Proof of Concepts (POCs) for new feature requests.\n\nFor example, capture simulation attributes in a table and select them for subsequent runs."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#shiny-development-tips-1",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#shiny-development-tips-1",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Shiny Development Tips",
    "text": "Shiny Development Tips\n\nDebugging like a pro\n\nDebug via browser(), debug(function_name), and debug points.\nSet breakpoints, step through code, and inspect variables to troubleshoot efficiently.\n\nApply standard software development principles:\n\nDRY (Don’t Repeat Yourself)\nYAGNI (You aren’t going to need it)\nKISS (Keep it Simple Silly)\nDocument your code for humans.\nPrioritize clean code at all times.\nSeparation of Concerns."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#facilitate-consistent-reporting",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#facilitate-consistent-reporting",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Facilitate Consistent Reporting",
    "text": "Facilitate Consistent Reporting\n\n\n\nUtilize parameterized markdown reports for dynamic MS Word report generation within the application.\nAdhere to the organization’s document template for uniformity in reporting.\nEnsure each page or process has a predefined standard write-up with dynamic bits/sections based on simulation calculations."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#ensuring-reproducibility",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#ensuring-reproducibility",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Ensuring Reproducibility",
    "text": "Ensuring Reproducibility\n\nLeverage package management tools\n\nUtilize renv or packrat to manage package dependencies.\nProvides a controlled environment for your project.\nEnsure reproducibility and minimize version conflicts.\n\nRely on packages published and actively maintained on CRAN for a validated R environment.\nEstablish unit tests for every Bio Stats function used to ensure accurate and consistent results.\nInvest time to create an in-depth GitHub ReadMe with the sections Project Overview, Getting Started, User Application Flow and Usage, Key Programming Concept Implemented (if any) and Developer Guide providing comprehensive project reproducibility instructions."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#enhancing-scalability",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#enhancing-scalability",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Enhancing Scalability",
    "text": "Enhancing Scalability\n\nImplement modularization and functional programming for a plug-and-play development format across applications.\nEnable multiple studies to be added concurrently using standard git branching strategies, involving multiple concurrent developers.\nAsync Programming: Evaluate longer simulations in a separate R process to keep the current R process running the shiny application free for use, preventing app performance issues.\n\nFew R packages to aid this are: callr, mirai, crew, coro, future and promises\n\nTake a step further and deploy simulation functions as internal APIs with Plumber.\nWrite your custom JavaScript and R bindings for implementing unique feature requests.\nApproach feature requests as a blend of web development, software engineering, and R development."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#utilize-automated-testing",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#utilize-automated-testing",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Utilize Automated Testing",
    "text": "Utilize Automated Testing\n\n\n\n\nWriting Test Cases (Inputs, Expected Outputs)\nFull Stack Testing\n\ntestthat for back-end testing,\nshinytest2 for front end testing, and\nshinyloadtest for load testing.\n\nTypes of Tests: Unit, Functional, Integration, and End-to-End\nContinuous Integration for Testing with Git branching strategies.\n\n\n\n\n\nBenefits\n\nEarly Bug Detection\nEfficiency and Speed\nConsistent and Repeatable Testing\nIncreased Test Coverage\nRegression Testing Capabilities\nGreater Confidence in Release Stability"
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#common-application-features",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#common-application-features",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Common Application Features",
    "text": "Common Application Features\n\nDownload visualization from any part of the application.\nAccess downloadable interim simulation calculations for each process, aiding in simulation fine-tuning.\nDownload dynamically rendered MS Word report with FDA submission format for faster review and iterative changes.\nAdd and execute multiple simulations simultaneously for efficiency.\n\nCompare similar graphs side by side for comprehensive analysis across all simulations.\nGenerate dynamic grouped plots based on the sequence of simulations requested.\n\nReceive email notifications to stay updated on the progress of lengthy simulations, along with attached reports."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#common-application-features-1",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#common-application-features-1",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Common Application Features",
    "text": "Common Application Features\n\nInclude and display the underlying mathematical equation for a study or simulation on the user interface using LaTeX.\nReceive appropriate notifications upon completion of each process.\nHelper Tabs for - Application Information, Usage Manual, Release Tabs, Feedback and Contact Business Lead - all through the application.\n\nDistribute an updated User Manual in the quarterly release email and include it as a ‘User Manual’ tab within the application.\nFeature a ‘User Feedback’ tab for direct communication of feedback with the project manager via email.\nInclude a ‘Release Notes’ tab to display app changes over time, promoting transparency."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#enhancing-user-adoption",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#enhancing-user-adoption",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Enhancing User Adoption",
    "text": "Enhancing User Adoption\n\nCreate GIFs showcasing the application layout and user flow.\n\nInclude them in the Git readme and announcement emails.\n\nCreate detailed application interaction user manuals with screenshots and highlights for each step.\nConduct regular (quarterly) training sessions to provide guidance, answer questions, and assist users with new features.\n\nRecord and share them for easier re-visit.\n\nContinuously engage user base for better ROI and on boarding.\nPrioritize most requested user features for each sprint."
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#thank-you",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#thank-you",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "Thank you",
    "text": "Thank you\n\nQuarto presentation code available on GitHub at http://bit.ly/3ZHZTNf\nSlides available on GitHub Pages at https://bit.ly/3RsdExn\nConnect and/or send me a DM for a follow up question or catch up\n\nLinkedin: mayank-agrawal-7jan\nX (previously Twitter): mayank7jan\nMastodon: mayank7j"
  },
  {
    "objectID": "enhancing_workflow_efficiency_of_bio_stats.html#references---r-packages",
    "href": "enhancing_workflow_efficiency_of_bio_stats.html#references---r-packages",
    "title": "Enhancing Efficiency and Workflow of Bio Statistics Teams",
    "section": "References - R Packages",
    "text": "References - R Packages\n\nshinyDashboard, bslib, bs4dash for standard dashboard template.\nrmarkdown and Quarto for parameterized reporting.\nrenv for package management in a R project.\nglue for interpreted string literals for dynamic reporting.\ncallr for separate r sessions.\nplumber for API creation.\nhttr2 for API calls.\npins for shareable secured publishing of data, models, and R objects\ntestthat, shinytest2 and shinyloadtest for testing.\ndplyr for data manipulation.\nggplot2, plotly and echarts4r for visualization.\nprofvis for code profiling and time estimation\n\n\n\nR Pharma 2023"
  }
]